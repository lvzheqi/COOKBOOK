package de.hs.inform.lyuz.cookbook.gui;

import java.awt.Toolkit;
import java.awt.event.InputEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import de.hs.inform.lyuz.cookbook.controller.manager.CategoryManager;

public class CategoryPanel extends javax.swing.JPanel {

    private DefaultListModel catTempListModel;
    private DefaultListModel catExtraListModel;

    public CategoryManager categoryManager;

    private final CookMainJFrame cookConvert;

    /**
     * Creates new form CategoriePanel
     *
     * @param cookConvert
     */
    public CategoryPanel(CookMainJFrame cookConvert) {

        this.cookConvert = cookConvert;
        categoryManager = new CategoryManager();

        initComponents();
        init();
    }

    private void init() {
        allocateBtn.setToolTipText("Bitte die Katelogie Item aus beide Listen auswählen");
        renameBtn.setToolTipText("Bitte die Katelogie Item aus linken Seite auswählen und umnennen");
        leftBtn.setToolTipText("Bitte die Katelogie Item aus linken Seite auswählen");

        //TODO: 点击空白处,取消所选选项
        catTempList.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                JList list = (JList) e.getSource();

                if (list.locationToIndex(e.getPoint()) == -1 && !e.isShiftDown() && !isMenuShortcutKeyDown(e)) {
                    list.clearSelection();
                }
            }
        }
        );
    }

    private boolean isMenuShortcutKeyDown(InputEvent event) {

        return (event.getModifiers()
                & Toolkit.getDefaultToolkit().getMenuShortcutKeyMask()) != 0;

    }

    public void reloadCatList() {
        catTempListModel = new DefaultListModel();
        catExtraListModel = new DefaultListModel();

        cookConvert.getMyBook().getCatTemplate().forEach((ct) -> {
            catTempListModel.addElement(ct);
        });
        catTempList.setModel(catTempListModel);

        cookConvert.getMyBook().getCatExtral().forEach((s) -> {
            catExtraListModel.addElement(s);
        });
        catExtraList.setModel(catExtraListModel);
    }

    private void switchListModel(DefaultListModel dModel, int index, boolean UOD) {

        Object n1 = dModel.get(index);
        Object n2;
        if (UOD) {
            if (index != 0) {
                n2 = dModel.get(index - 1);
                dModel.set(index, n2);
                dModel.set(index - 1, n1);
            }
        } else {
            if (index != dModel.size() - 1) {
                n2 = dModel.get(index + 1);
                dModel.set(index, n2);
                dModel.set(index + 1, n1);
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        catTemplateSP = new javax.swing.JScrollPane();
        catTempList = new javax.swing.JList<>();
        catTempLabel = new javax.swing.JLabel();
        catExtraLabel = new javax.swing.JLabel();
        catExtraSP = new javax.swing.JScrollPane();
        catExtraList = new javax.swing.JList<>();
        deleteBtn = new javax.swing.JButton();
        upBtn = new javax.swing.JButton();
        downBtn = new javax.swing.JButton();
        toExpBtn = new javax.swing.JButton();
        leftBtn = new javax.swing.JButton();
        renameBtn = new javax.swing.JButton();
        allocateBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        savaCatBtn = new javax.swing.JButton();

        catTemplateSP.setViewportView(catTempList);

        catTempLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        catTempLabel.setText("existing categories");

        catExtraLabel.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        catExtraLabel.setText("extra categories");

        catExtraSP.setViewportView(catExtraList);

        deleteBtn.setText("DELETE");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        upBtn.setText("UP");
        upBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upBtnActionPerformed(evt);
            }
        });

        downBtn.setText("DOWN");
        downBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downBtnActionPerformed(evt);
            }
        });

        toExpBtn.setText("NEXT");
        toExpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toExpBtnActionPerformed(evt);
            }
        });

        leftBtn.setText("Left");
        leftBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftBtnActionPerformed(evt);
            }
        });

        renameBtn.setText("RENAME");
        renameBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renameBtnActionPerformed(evt);
            }
        });

        allocateBtn.setText("MERGE");
        allocateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                allocateBtnActionPerformed(evt);
            }
        });

        backBtn.setText("BACK");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        savaCatBtn.setText("SAVE AS");
        savaCatBtn.setToolTipText("sava the categories as templete");
        savaCatBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savaCatBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(catTemplateSP, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(leftBtn)
                            .addComponent(upBtn)
                            .addComponent(downBtn)
                            .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(renameBtn)
                            .addComponent(allocateBtn)
                            .addComponent(savaCatBtn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(catExtraSP, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(catTempLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(catExtraLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(toExpBtn)
                        .addGap(18, 18, 18)))
                .addGap(40, 40, 40))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {allocateBtn, deleteBtn, downBtn, leftBtn, renameBtn, savaCatBtn, upBtn});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(catTempLabel)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(leftBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(upBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(downBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deleteBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(renameBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(allocateBtn)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(savaCatBtn))
                            .addComponent(catTemplateSP, javax.swing.GroupLayout.DEFAULT_SIZE, 260, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(catExtraLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(catExtraSP, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBtn)
                    .addComponent(toExpBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {allocateBtn, deleteBtn, downBtn, leftBtn, renameBtn, savaCatBtn, upBtn});

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {backBtn, toExpBtn});

    }// </editor-fold>//GEN-END:initComponents

    private void downBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downBtnActionPerformed
        if (catTempList.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "Bitte ein Item aus linken Seite auswählen", "Warnung", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int index = catTempList.getSelectedIndex();
        switchListModel(catTempListModel, index, false);

        if (index != catTempListModel.size() - 1) {
            catTempList.setSelectedIndex(index + 1);
        }
    }//GEN-LAST:event_downBtnActionPerformed

    private void toExpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toExpBtnActionPerformed
        if (!cookConvert.getMyBook().getFiles().isEmpty()) {
            cookConvert.getCookTabPane().setSelectedComponent(CookMainJFrame.exportPanel);
        } else {
            JOptionPane.showMessageDialog(null, "Bitte eine Datei geben", "Warnung", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_toExpBtnActionPerformed

    private void upBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upBtnActionPerformed

        if (catTempList.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "Bitte ein Item aus linken Seite auswählen", "Warnung", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int index = catTempList.getSelectedIndex();
        switchListModel(catTempListModel, index, true);

        if (index != 0) {
            catTempList.setSelectedIndex(index - 1);
        }
    }//GEN-LAST:event_upBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed

        //TODO: 变为一个Dialog
        if (!catTempList.isSelectionEmpty()) {
            int n = JOptionPane.showConfirmDialog(null, "Katalogie " + catTempListModel.get(catTempList.getSelectedIndex()) + " lösen ?", "Warnung", JOptionPane.YES_NO_OPTION);
            if (n == 0) {
                String catItem = (String) catTempListModel.get(catTempList.getSelectedIndex());
                catTempListModel.remove(catTempList.getSelectedIndex());
                cookConvert.setMyBook(
                        categoryManager.removeCat4AllList(cookConvert.getMyBook(),catItem, true));
            }
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void leftBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftBtnActionPerformed
        if (!catExtraList.isSelectionEmpty()) {
            int n = JOptionPane.showConfirmDialog(null, "Wollen Sie die Item " + catExtraListModel.get(catExtraList.getSelectedIndex()) + " hinzufügen ?", "Warnung", JOptionPane.YES_NO_OPTION);
            if (n == 0) {
                String catItem = (String) catExtraListModel.get(catExtraList.getSelectedIndex());

                catTempListModel.addElement(catItem);
                catExtraListModel.remove(catExtraList.getSelectedIndex());
                cookConvert.setMyBook(
                        categoryManager.addCatAllList(cookConvert.getMyBook(),catItem));
            }
        }
    }//GEN-LAST:event_leftBtnActionPerformed

    private void renameBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_renameBtnActionPerformed
        if (catTempList.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "Bitte ein Item aus linken Seite auswählen ", "Warnung", JOptionPane.YES_NO_OPTION);
        } else {
            String catItem = (String) catTempListModel.get(catTempList.getSelectedIndex());
            String rename = javax.swing.JOptionPane.showInputDialog("Bitte einen Name eingeben");
            rename = rename.toUpperCase();
            if (!cookConvert.getMyBook().getCatAll().contains(rename)) {
                int index = catTempList.getSelectedIndex();
                catTempListModel.remove(index);
                catTempListModel.add(index, rename);
                cookConvert.setMyBook(
                        categoryManager.renameCatList(cookConvert.getMyBook(),catItem, rename));
            } else {
                JOptionPane.showMessageDialog(null, "Der Name ist schon gegeben!", "Warnung", JOptionPane.YES_NO_OPTION);
            }

        }
    }//GEN-LAST:event_renameBtnActionPerformed

    private void allocateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_allocateBtnActionPerformed
        if (catExtraList.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "Bitte ein Item aus rechten Seite auswählen ", "Warnung", JOptionPane.YES_NO_OPTION);
        } else if (catTempList.isSelectionEmpty()) {
            JOptionPane.showMessageDialog(null, "Bitte ein Item aus linken Seite auswählen ", "Warnung", JOptionPane.YES_NO_OPTION);
        } else {
            int n = JOptionPane.showConfirmDialog(null, "Wollen Sie die Item " + catExtraListModel.get(catExtraList.getSelectedIndex())
                    + " mit " + catTempListModel.get(catTempList.getSelectedIndex())
                    + " hinzufügen ?", "Warnung", JOptionPane.YES_NO_OPTION);
            if (n == 0) {
                String cat1 = (String) catExtraListModel.get(catExtraList.getSelectedIndex());
                String cat2 = (String) catTempListModel.get(catTempList.getSelectedIndex());
                catExtraListModel.remove(catExtraList.getSelectedIndex());
                cookConvert.setMyBook(
                        categoryManager.allocateCatList(cookConvert.getMyBook(),cat1, cat2));
            }
        }
    }//GEN-LAST:event_allocateBtnActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        int n = JOptionPane.showConfirmDialog(null, "Die geänderte Katelogie werden nicht gespreichert. Wollen Sie noch zurückgeben?", "Warnung", JOptionPane.YES_NO_OPTION);
        if (n == 0) {
            cookConvert.getCookTabPane().setSelectedComponent(CookMainJFrame.importPanel);
        }

    }//GEN-LAST:event_backBtnActionPerformed

    private void savaCatBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savaCatBtnActionPerformed
        int n = JOptionPane.showConfirmDialog(null, "Wollen Sie die Katelogie von der linken Seite ansatt der alten als Muster spreichern?", "Warnung", JOptionPane.YES_NO_OPTION);
        if (n == 0) {
            CategoryManager.writeCatTemplate(cookConvert.getMyBook().getCatTemplate());
        }
    }//GEN-LAST:event_savaCatBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton allocateBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel catExtraLabel;
    private javax.swing.JList<String> catExtraList;
    private javax.swing.JScrollPane catExtraSP;
    private javax.swing.JLabel catTempLabel;
    private javax.swing.JList<String> catTempList;
    private javax.swing.JScrollPane catTemplateSP;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton downBtn;
    private javax.swing.JButton leftBtn;
    private javax.swing.JButton renameBtn;
    private javax.swing.JButton savaCatBtn;
    private javax.swing.JButton toExpBtn;
    private javax.swing.JButton upBtn;
    // End of variables declaration//GEN-END:variables
}
