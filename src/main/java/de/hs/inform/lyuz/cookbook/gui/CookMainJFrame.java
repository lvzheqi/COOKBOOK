package de.hs.inform.lyuz.cookbook.gui;


import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.event.ChangeEvent;
import de.hs.inform.lyuz.cookbook.controller.parser.FileParser;
import de.hs.inform.lyuz.cookbook.model.MyBook;


public class CookMainJFrame extends javax.swing.JFrame {

    public static ImportPanel importPanel;
    public static CategoryPanel categoryPanel;
    public static ExportPanel exportPanel;

    private final FileParser fileParser;
    private MyBook myBook;
    
    
    public CookMainJFrame() {
        
        fileParser = new FileParser();
        myBook = fileParser.getMyBook();
        
        initComponents();
        init();

        setLocationRelativeTo(null);
    }

    private void init() {

        importPanel = new ImportPanel(this);
        categoryPanel = new CategoryPanel(this);
        exportPanel = new ExportPanel(this);
        cookTabPane.addTab("Import Recpices", importPanel);
        cookTabPane.addTab("Category", categoryPanel);
        cookTabPane.addTab("Export", exportPanel);

        cookTabPane.addChangeListener((ChangeEvent e) -> {
            JTabbedPane tabbedPane = (JTabbedPane) e.getSource();
            int selectedIndex = tabbedPane.getSelectedIndex();
            switch (selectedIndex) {
                case 1:
                case 2:
                    if (!fileParser.getMyBook().getFiles().isEmpty() && ImportPanel.action) {
                        JOptionPane.showMessageDialog(null, "Die Kategorien werden neu importiert.", "Warnung", JOptionPane.WARNING_MESSAGE);
                    }
                    if (ImportPanel.action) {
                        
                        fileParser.reloadFiles(importPanel.getFiles());    
                        myBook = fileParser.getMyBook();
                        
                   
                        categoryPanel.reloadCatList();
                        ImportPanel.action = false;
                    }
                    break;
                default:
                    break;
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        cookTabPane = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(cookTabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(cookTabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        


    public static ImportPanel getImportPanel() {
        return importPanel;
    }

    public static void setImportPanel(ImportPanel importPanel) {
        CookMainJFrame.importPanel = importPanel;
    }

    public static CategoryPanel getCategoryPanel() {
        return categoryPanel;
    }

    public static void setCategoryPanel(CategoryPanel categoryPanel) {
        CookMainJFrame.categoryPanel = categoryPanel;
    }

    public static ExportPanel getExportPanel() {
        return exportPanel;
    }

    public static void setExportPanel(ExportPanel exportPanel) {
        CookMainJFrame.exportPanel = exportPanel;
    }

    public JTabbedPane getCookTabPane() {
        return cookTabPane;
    }

    public void setCookTabPane(JTabbedPane cookTabPane) {
        this.cookTabPane = cookTabPane;
    }

    public MyBook getMyBook() {
        return myBook;
    }

    public void setMyBook(MyBook myBook) {
        this.myBook = myBook;
    }


    
    // Variables declaration - do not modify                     
    private javax.swing.JTabbedPane cookTabPane;
    // End of variables declaration                   
}

